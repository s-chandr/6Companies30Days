
class Solution
{

	public int minDifference(int A[], int n) 
	{ 
	    //int n = A.length;
    int sum=0;
    for(int i=0;i<n;++i)
        sum+=A[i];
    
    //Subset Sum Problem
    //sum = (int)Math.ceil(sum/2);
    boolean[][] dp = new boolean[n+1][sum+1];
    //sum = sum/2;
    for(int i=0;i<=n;++i)
    for(int j=0;j<=sum/2;++j)
    {
        if(j==0)
            dp[i][j] = true;
        else if(i==0)
            dp[i][j] = false;
        else if(A[i-1]>j)
            dp[i][j] = dp[i-1][j];
        else
            dp[i][j] = dp[i-1][j] || dp[i-1][j-A[i-1]];
    }
    
    int diff = Integer.MAX_VALUE;
    for(int i=sum/2;i>=0;--i)
    {
        if(dp[n][i]){
	                    diff = Math.min(diff,Math.abs(sum-2*i));
	                    break;        
            
        }
    }
    
    return diff;

	    // Your code goes here
	} 
}
